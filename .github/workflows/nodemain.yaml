# CI CD 
# For master branch
# 1. Retag container image and push to docker hub
# 2. Notification by email

name: NODE_MAIN

on:
    #push:
    #  branches: [ "main" ]
    pull_request:
      branches: [ "main" ]
env:
    GITHUB_PR_NUMBER: ${{github.event.pull_request.number}}
jobs:
    build:
        runs-on: ubuntu-latest
        defaults:
            run:
              working-directory: ./javascript # Here the path to the folder where package-lock.json is located.
        steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Get Image Name & Tag
          id: get_image_name
          uses: mikefarah/yq@master
          with:
            cmd: yq -r '.spec.template.spec.containers.[0].image' javascript/manifest/dev/pingw91010.yaml
    
        #https://stackoverflow.com/a/76371212/20000255
        - name : Get YQ Result
          run: |
            echo ${{ steps.get_image_name.outputs.result }}

        #- name: Login to Docker Hub
        #  uses: docker/login-action@v3
        #  with:
        #    username: ${{ secrets.DOCKERHUB_USERNAME }}
        #    password: ${{ secrets.DOCKERHUB_TOKEN }}
        
        #https://github.com/marketplace/actions/docker-metadata-action
        #Extract Docker Image Metadata
        # - name: Extract Docker Image Metadata
        #   id: docker_meta
        #   uses: docker/metadata-action@v3
        #   with:
        #     images: ${{ steps.get_image_name.outputs.result }}
        #     #all: true
        #     tags: |
        #       type=semver,pattern={{version}}
        
        # - name : Get Docker Meta Result
        #   run: |
        #     docker images
        #     echo ${{ steps.docker_meta.outputs.tags }}
        #     echo "-----------------"
        #     echo ${{ steps.docker_meta.outputs.labels }}
        
        # - name: Build and push
        #   uses: docker/build-push-action@v5
        #   with:
        #     context: ./javascript
        #     push: true
        #     #push: ${{ github.event_name != 'pull_request' }}
        #     tags: ${{ steps.docker_meta.outputs.tags }}
        #     labels: ${{ steps.docker_meta.outputs.labels }}

        #- id: semver-tag
        #  uses: gandarez/semver-action@vlatest
        #- name: "Created tag"
        #  run: echo "tag ${{ steps.semver-tag.outputs.semver_tag }}"

        #docker login $REGISTRY_URL -u $USERNAME -p $PASSWORD
        - name : docker retag
          run: |
              docker login ${{ vars.DOCKER_URL }} -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
              docker pull ${{ steps.get_image_name.outputs.result }}
              echo "-----------------"
              docker images
              echo "-----------------"
              docker tag ${{ steps.get_image_name.outputs.result }} ${{ secrets.DOCKERHUB_USERNAME }}:v${{env.GITHUB_PR_NUMBER}}
              docker images
              echo "-----------------"
              docker push ${{ secrets.DOCKERHUB_USERNAME }}:v${{env.GITHUB_PR_NUMBER}}